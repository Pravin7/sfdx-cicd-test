<apex:page Controller="ExtMultiEditController">
<apex:includeScript value="{!URLFOR($Resource.ExtJs4, 'ext-all-debug.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.ExtJs4, '/src/ux/CheckColumn.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.ExtJs4, '/resources/css/ext-all.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.checkbcssn, '/checkbcss/CheckHeader.css')}"/>

<script type="text/javascript">

        var limit = 2;
        function myfunc(record) {
            alert('in myfunc' +record.data.id);
            var bundle = record.raw.id+','+record.data.name;
            myapexFunc(bundle);
        }
        
        var SFObjectArray = [];
        var arrlength = 0;
        <apex:repeat value="{!myDataString}" var="arrayItem">
            SFObjectArray.push({!arrayItem});
            arrlength++;
        </apex:repeat>
                

        var TOTAL = 14;
        var fetchedData = function(){
            this.data = null;
            this.total = 0;
        }
        
            function fillStore(page, count) {
            var data = [];
            for (var i = 0; i < count ; i++) {
                var id = 1 + (page-1) * count + i;
                if ( id > TOTAL ) break;
                   var temp1 = new Array();
                   data.push(SFObjectArray[id]);
                }
                return data;
            }
            
      var data1 = {!accountJson}; 
           
Ext.onReady(function () {
    
   var mydata = []; 
   var store = Ext.create('Ext.data.Store', {
        storeId: 'simpsonsStore',     
        pageSize: 2,
        fields: ['id', 'name', {name: 'ischecked', type: 'bool'}],
        data: {!accountJson}        
    });    
   // store.loadData(data1);
    var pluginExpanded = true;
    
    Ext.Ajax.on('beforerequest', function(conn, options, eOpts) {
    console.log('The options parameter contains the options');     
    });

    var grid = new Ext.create('Ext.grid.Panel', {
            title: 'Simpsons',
            store: store,
            columns: [{
                header: 'Id',
                dataIndex: 'id',
                editor: 'textfield'
            }, {
                header: 'Name',
                dataIndex: 'name',
                flex: 1,
                editor: {
                    xtype: 'textfield',
                    allowBlank: false
                }
            },
            {
            xtype: 'checkcolumn',
            header: 'To Save?',
            dataIndex: 'ischecked',
            width: 55,
            stopSelection: false,
            }
            ],

            selType: 'rowmodel',
            plugins: [
            Ext.create('Ext.grid.plugin.RowEditing', {
                clicksToEdit: 1,
                listeners: {
                            edit: function(editor,e) {
                                var record = e.record;
 
                           //zf     alert(record.data.name);
                                
                                //do your processing here, e.g.:
                                Ext.Ajax.request({
                                    url: 'https://c.ap1.visual.force.com/apex/extcrudhelper?record=' +record,
                                        success: function(response, opts) {
                                  //            var obj = Ext.decode(response.responseText);
                                  //            console.dir(obj);
                                           },
                                        failure: function(response, opts) {
                                              console.log('server-side failure with status code ' + response.status);
                                           }
                            
                               //     params: { record: record }
                                });
                                }
                            }                            
            })],
            height: 200,
            width: 400,
            renderTo: "my_div",
            
            bbar: Ext.create('Ext.PagingToolbar', {
            store: store,
            displayInfo: true,
            displayMsg: 'Displaying topics {0} - {1} of {2}',
            emptyMsg: "No topics to display",
            items:[
                '-', {
                text: 'Show Preview',
                pressed: pluginExpanded,
                enableToggle: true,
                toggleHandler: function(btn, pressed) {
                    var preview = Ext.getCmp('gv').getPlugin('preview');
                    var k = preview.toggleExpanded(pressed);
                }
            }],
            listeners: {
                    'beforechange': function(pageBar, page, eOpts) {
                      console.log(page);
                        fetchedData.data = fillStore(page, limit);
                        mydata = fetchedData.data;
                        newdata = '[' +mydata.toString() + ']';
                        grid.getStore().sync();
                        grid.getStore().loadData([],false);
                        console.log(grid.getStore());
                        console.log(mydata);
                                store.load({
                                    params: {
                                        start: 3, // specify params for the first page load if using paging
                                        limit: 2
                                    }
                                    });
                    //    store.removeAll();
                    //    store.sync();
                    //    store.loadData([],false);
                          console.log(pageBar);
                   //     store.loadData(mydata);
                    }
                  }   
               })   
            });
        
        Ext.create('Ext.Button', {
        text: 'Click to save',
        handler: function () {
           var rows = grid.getStore().getRange();
           console.log(rows);
               for (i=0;i<rows.length;i++) {
                    if(rows[i].data.ischecked)
                       myfunc(rows[i]); 
               } 
        }, 
        renderTo: "b"      
        
    });
        
  //   store.loadPage(1);    
   //     setGrid(grid);                 used to set global variable 
});
//outside on read

</script>

    <div id="my_div">
</div>

    <apex:form >
        <apex:actionFunction name="myapexFunc" action="{!updateAccount}" reRender="a">
            <apex:param name="recordid" assignTo="{!myrecordid}" value="" />
        </apex:actionFunction>
        <apex:commandButton value="Save Changes" onclick=""/>
    </apex:form>

<div id="a">
</div>

<div id="b">
</div>

</apex:page>