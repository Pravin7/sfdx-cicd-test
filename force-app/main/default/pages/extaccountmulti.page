<apex:page Controller="ExtMultiEditController">
<apex:includeScript value="{!URLFOR($Resource.ExtJs4, 'ext-all-debug.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.ExtJs4, '/src/ux/CheckColumn.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.ExtJs4, '/resources/css/ext-all.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.checkbcssn, '/checkbcss/CheckHeader.css')}"/>

<script type="text/javascript">

        function myfunc(record) {
            alert('in myfunc' +record.data.id);
            var bundle = record.raw.id+','+record.data.name;
            myapexFunc(bundle);
        }


Ext.onReady(function () {

    Ext.create('Ext.data.Store', {
        storeId: 'simpsonsStore',
        fields: ['id', 'name', {name: 'ischecked', type: 'bool'}],
        data: {!accountJson}
    });
    
    
    Ext.Ajax.on('beforerequest', function(conn, options, eOpts) {
   // alert('before');
    console.log('The options parameter contains the options');     
    });

    var grid = new Ext.create('Ext.grid.Panel', {
            title: 'Simpsons',
            store: Ext.data.StoreManager.lookup('simpsonsStore'),
            columns: [{
                header: 'Id',
                dataIndex: 'id',
                editor: 'textfield'
            }, {
                header: 'Name',
                dataIndex: 'name',
                flex: 1,
                editor: {
                    xtype: 'textfield',
                    allowBlank: false
                }
            },
            {
            xtype: 'checkcolumn',
            header: 'To Save?',
            dataIndex: 'ischecked',
            width: 55,
            stopSelection: false,
            }
            ],

            selType: 'rowmodel',
            plugins: [
            Ext.create('Ext.grid.plugin.RowEditing', {
                clicksToEdit: 1,
                listeners: {
                            edit: function(editor,e) {
                                var record = e.record;
 
                             //   console.log(e.record);
                              //  myfunc(record);
                           //zf     alert(record.data.name);
                                
                                //do your processing here, e.g.:
                                Ext.Ajax.request({
                                    url: 'https://c.ap1.visual.force.com/apex/extcrudhelper?record=' +record,
                                        success: function(response, opts) {
                                  //            var obj = Ext.decode(response.responseText);
                                  //            console.dir(obj);
                                           },
                                        failure: function(response, opts) {
                                              console.log('server-side failure with status code ' + response.status);
                                           }
                            
                               //     params: { record: record }
                                });
                                }
                            }                            
            })],
            height: 200,
            width: 400,
            renderTo: "my_div"
        });
        
    Ext.create('Ext.Button', {
        text: 'Click to save',
        handler: function () {
           var rows = grid.getStore().getRange();
           console.log(rows);
               for (i=0;i<rows.length;i++) {
                    if(rows[i].data.ischecked)
                       myfunc(rows[i]); 
               } 
        }, 
        renderTo: "b"
    });
        
   //     setGrid(grid);                 used to set global variable 
});
//outside on read

</script>

    <div id="my_div">
</div>

    <apex:form >
        <apex:actionFunction name="myapexFunc" action="{!updateAccount}" reRender="a">
            <apex:param name="recordid" assignTo="{!myrecordid}" value="" />
        </apex:actionFunction>
        <apex:commandButton value="Save Changes" onclick=""/>
    </apex:form>

<div id="a">
</div>

<div id="b">
</div>

</apex:page>