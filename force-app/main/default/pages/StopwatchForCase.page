<apex:page standardController="Case" extensions="CaseSWatchExtension">
<apex:includeScript value="{!URLFOR($Resource.jquery1_10)}"  />

    <style>    
        @font-face {
        font-family: 'digital';
        src: url("{!URLFOR($Resource.DigitalFonts,'digitalfont.ttf')}");
        src: url("{!URLFOR($Resource.DigitalFonts,'digitalfont.ttf')}") format('truetype');
        }
        
        .container {
            padding: 200px;
            text-align: center;
        }

        .timer {
            padding: 10px;
            background: linear-gradient(top, #222, #444);
            display: inline-block;
            border: 7px solid #efefef;
            border-radius: 5px;
            position: relative;
            
            box-shadow: 
                inset 0 -2px 10px 1px rgba(0, 0, 0, 0.75), 
                0 5px 20px -10px rgba(0, 0, 0, 1);
        }
        
        .cell {
            /*Should only display 1 digit. Hence height = line height of .numbers
            and width = width of .numbers*/
            width: 0.8em;
            height: 40px;
            font-size: 37px;
            font-family: 'digital';
            position: relative;
            margin: 0 auto;
          //  color: #707070;
        }

        .numbers {
            width: 0.6em;
            line-height: 40px;
            font-family: digital, arial, verdana;
            text-align: center;
            color: #fff;
            
            position: absolute;
            top: 0;
            left: 0;
            
            /*Glow to the text*/
            text-shadow: 0 0 5px rgba(255, 255, 255, 1);
        }
        
        .cellName {
        font-family: "Lucida Console", "Lucida Sans Typewriter", Monaco, "Bitstream Vera Sans Mono", monospace;
        margin: 0 auto;
       // color: #707070;
        }
        
        .cellBlock {
            float: left; 
            -webkit-box-shadow: 10px 0px 5px -7px #888 ;
        }
        
        .buttonBlock {
            float: right; 
            margin-left: 20px;
        }
        
        .carvedhr {
             clear: both; 
             float: none; 
             width: 98%; 
             height: 2px;
             margin:5px 0px 5px 1px;
             border: none; 
             background: #ddd;
             background-image: -webkit-gradient(
                 linear,
                 left top,
                 left bottom,
                 color-stop(0.5, rgb(221,221,221)),
                 color-stop(0.5, rgb(255,255,255))
             );
             background-image: -moz-linear-gradient(
                 center top,
                 rgb(221,221,221) 50%,
                 rgb(255,255,255) 50%
             );         
        }
        
        .logoDiv {
            height: 14px; 
            float: right; 
            padding-right:2%; 
            padding-top:1.5%; 
            margin-bottom:1.2%        
        }               
    </style>   

    <script type="text/javascript">     
        var time;
        var secVal;
        var minVal;
        var houVal;
        var isStarted = new Boolean(0);
        var stopTimer = new Boolean({!stopTimer});
        var confirmedStop = new Boolean(0); // used at oncomplete stop
        var isAutoSave = new Boolean(0); // use this boolean to toggle auto save
        var autoSaveCounter = 0;
        var autoSaveTime = 300; // default auto save time 300 seconds

        function start_timer(btnToChange) {
            //  var btnToChange = document.getElementById( id );        this is not required
            if (stopTimer == false) {
                if (isStarted == 0) {
                    isStarted = 1;
                    btnToChange.value = 'Pause Timer';
                    timer = setInterval("increaseCounter()", 1000);
               //     time = secVal + '#' + minVal + '#' + houVal + '#' + stopTimer;
               //     startClockAct(time);
                    autoSaveCounter = 0;
                } else {
                    isStarted = 0;
                    btnToChange.value = 'Start Timer';
                    window.clearTimeout(timer);
                    secVal = secVal + 1;
                    time = secVal + '#' + minVal + '#' + houVal + '#' + stopTimer;
                    stopClockAct(time);
                }
            }
        }

        function stop_timer() {
            if (stopTimer == false) {
                if (confirmStop() == true) {
                    if (typeof timer != 'undefined') { // user clicking directly stop button
                        window.clearTimeout(timer);
                        if (isStarted == 1) { // don't adjust time if timer is not started
                            secVal = secVal + 1;
                        }
                    } else {
                        secVal = parseInt($('#counterSec').html(), 10)
                        minVal = parseInt($('#counterMin').html(), 10)
                        houVal = parseInt($('#counterHour').html(), 10)
                    }
                    isStarted = 0;
                    stopTimer = true; // this stops the timer
                    time = secVal + '#' + minVal + '#' + houVal + '#' + stopTimer;
                    stopClockAct(time);
                }
            }
        }

        function increaseCounter() {
            secVal = parseInt($('#counterSec').html(), 10)
            minVal = parseInt($('#counterMin').html(), 10)
            houVal = parseInt($('#counterHour').html(), 10)
            if (secVal != 59)
                $('#counterSec').html((secVal + 1));
            else {
                if (minVal != 59) {
                    $('#counterMin').html((minVal + 1));
                } else {
                    $('#counterHour').html((parseInt($('#counterHour').html(), 10) + 1));
                    $('#counterMin').html(0);
                }
                $('#counterSec').html(0);
            }

            // auto save
            if (isAutoSave == true) {
                autoSaveCounter++;
                if (autoSaveCounter == autoSaveTime) {
                    var saveTime = secVal + '#' + minVal + '#' + houVal + '#' + stopTimer;
                    saveClockAct(saveTime);
                    autoSaveCounter = 0;
                }
            }
        }

        function confirmStop() {
            confirmedStop = confirm("Do you really want to stop the timer!");
            if (confirmedStop == true) {
                return true;
            } else {
                return false;
            }
        }

        function onCompleteStop() {
            if (confirmedStop == true) {
                window.top.location = '/{!Case.id}';
            }
        }            
    </script>
    
    <apex:form >
        <div id="innerDiv" style="width:400px;">
            <br/>
                <div class="timer">
                    <div class="cellBlock" >
                        <div class="cell">
                            <div id="counterHour">
                                {!hourTime}
                            </div>
                         </div>                        
                         <div class="cellName">
                            &nbsp; Hours &nbsp;
                         </div>
                    </div>
                    <div class="cellBlock" >
                        <div class="cell">
                            <div id="counterMin" >
                                {!minTime}
                            </div>
                         </div>                        
                         <div class="cellName">
                                &nbsp; Minutes &nbsp;
                        </div>                              
                    </div>
                    <div class="cellBlock" >
                        <div class="cell">
                            <div id="counterSec" >
                                {!secTime}
                            </div>                  
                        </div>
                         <div class="cellName">
                             &nbsp; Seconds &nbsp;
                        </div> 
                    </div>
                <div class="buttonBlock" >
                    <div >     
                         <apex:commandButton value="Start Timer" id="startButton" onclick="start_timer(this)" reRender="none" disabled="{!stopTimer}"/>
                    </div>
                    <div style="margin-top:4%;">
                        <apex:commandButton value="Stop Timer" id="stopButton" onclick="stop_timer()" reRender="clockBlock" disabled="{!stopTimer}"  oncomplete="onCompleteStop()"/>
                    </div>
                </div>
                <div style="padding-top:19.5%;">
                    <hr class = "carvedhr" />
                </div>
                <div class="logoDiv" >
                        <apex:image url="{!$Resource.clockLogo}" height="100%"/>
                </div>                    
           </div>                
                <apex:actionFunction name="startClockAct" action="{!startClock}" reRender="none" >     
                   <apex:param name="time" assignTo="{!timeBundle}" value="" />    
                </apex:actionFunction>
                <apex:actionFunction name="stopClockAct" action="{!stopClock}" reRender="clockBlock">     
                   <apex:param name="time" assignTo="{!timeBundle}" value="" />    
                </apex:actionFunction>
                <apex:actionFunction name="saveClockAct" action="{!saveTime}" reRender="clockBlock">     
                   <apex:param name="savetime" assignTo="{!timeBundle}" value="" />    
                </apex:actionFunction>                
        </div>     
    </apex:form>
        
</apex:page>