<apex:page >
<c:ExtJs_imports >
</c:ExtJs_imports>

 <script type="text/javascript">
  Ext.onReady(function () { 
      Ext.define('User', {
        extend: 'Ext.data.Model',
        fields: [
            {name: 'id',    type: 'int'},
            {name: 'name',  type: 'string'},
            {name: 'phone', type: 'string', mapping: 'phoneNumber'}
        ]
    });
    
    //this data does not line up to our model fields - the phone field is called phoneNumber
    var data = { totalCount: '3',
        users: [
            {
                id: 1,
                name: 'Ed Spencer',
                phoneNumber: '555 1234'
            },
            {
                id: 2,
                name: 'Abe Elias',
                phoneNumber: '666 1234'
            },
            {
                id: 3,
                name: 'Tom Cat',
                phoneNumber: '666 1234'
            }
            
        ]
    };
    
    console.log(data);
    //note how we set the 'root' in the reader to match the data structure above
    var store = new Ext.data.Store({
        autoLoad: true,
        remoteSort: true,
        model: 'User',
        pageSize: 2,
        data : data,
        proxy: {
            type: 'memory',
            enablePaging : true,
            reader: {
                type: 'json',
                root: 'users',
                successProperty: 'success',
                totalProperty: 'totalCount'
            },
            write: {
                type: 'json',
                root: 'users'
            }
        },
        listeners: {
            datachanged: function( thisstore, eOpts ) {
                console.log(thisstore);
        }
      }
    });
    
  var gridNew = Ext.create('Ext.grid.Panel', {
    store: store,
    id: 'thegrid',
    loadMask: false,
    renderTo: "my_div",
    plugins: [{
      ptype: 'cellediting',
      clicksToEdit: 1,
      listeners: {
        edit: function(editor, e) {
          //e.record.commit();
        }
      }
    }],
    columns: [{
      text: 'Name',
      dataIndex: 'name',
      editor: {
        allowBlank: false
      }
    }, {
      text: 'Text',
      dataIndex: 'text'
    }],
    dockedItems: [{
      xtype: 'pagingtoolbar',
      store: store,
      dock: 'bottom',
      displayInfo: true
    }],
  });   
       
});
  
 </script>
 
<div id='my_div'>
</div>
</apex:page>